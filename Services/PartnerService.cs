using Master_Floor_Project.Data;
using Master_Floor_Project.Models;
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Diagnostics;
using System;
using System.Linq;

namespace Master_Floor_Project.Services
{
    public class PartnerService : IPartnerService
    {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
        public async Task<IEnumerable<Partner>> GetPartnersAsync()
        {
            using var context = new AppDbContext();
            return await context.Partners.ToListAsync();
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        public async Task AddPartnerAsync(Partner partner)
        {
            try
            {
                using var context = new AppDbContext();
                context.Partners.Add(partner);
                await context.SaveChangesAsync();
                Debug.WriteLine($"üü¢ PartnerService: –ü–∞—Ä—Ç–Ω–µ—Ä {partner.Name} –¥–æ–±–∞–≤–ª–µ–Ω");
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ PartnerService: –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {ex.Message}");
                throw;
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
        public async Task UpdatePartnerAsync(Partner partner)
        {
            try
            {
                using var context = new AppDbContext();
                context.Partners.Update(partner);
                await context.SaveChangesAsync();
                Debug.WriteLine($"üü¢ PartnerService: –ü–∞—Ä—Ç–Ω–µ—Ä {partner.Name} –æ–±–Ω–æ–≤–ª–µ–Ω");
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ PartnerService: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {ex.Message}");
                throw;
            }
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∑–∞—è–≤–∫–∏, –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂)
        public async Task DeletePartnerAsync(int partnerId)
        {
            try
            {
                using var context = new AppDbContext();

                // –ù–∞—Ö–æ–¥–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å–æ –í–°–ï–ú–ò —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                var partner = await context.Partners
                    .Include(p => p.Applications) // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
                        .ThenInclude(a => a.ApplicationItems) // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –∑–∞—è–≤–æ–∫
                    .FirstOrDefaultAsync(p => p.PartnerId == partnerId);

                if (partner != null)
                {
                    Debug.WriteLine($"üîç –ù–∞–π–¥–µ–Ω –ø–∞—Ä—Ç–Ω–µ—Ä: {partner.Name}, –∑–∞—è–≤–æ–∫: {partner.Applications.Count}");

                    // 1 –£–¥–∞–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–¥–∞–∂
                    var salesHistory = await context.SalesHistory
                        .Where(sh => sh.PartnerId == partnerId)
                        .ToListAsync();

                    if (salesHistory.Any())
                    {
                        context.SalesHistory.RemoveRange(salesHistory);
                        Debug.WriteLine($"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {salesHistory.Count} –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–∂");
                    }

                    // 2 –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫–∏ –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–∏
                    foreach (var application in partner.Applications)
                    {
                        Debug.WriteLine($"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É {application.ApplicationId}, –ø–æ–∑–∏—Ü–∏–π: {application.ApplicationItems.Count}");

                        if (application.ApplicationItems.Any())
                        {
                            context.ApplicationItems.RemoveRange(application.ApplicationItems);
                            Debug.WriteLine($"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {application.ApplicationItems.Count} –ø–æ–∑–∏—Ü–∏–π –∑–∞—è–≤–∫–∏");
                        }

                        context.Applications.Remove(application);
                        Debug.WriteLine($"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –∑–∞—è–≤–∫–∞ {application.ApplicationId}");
                    }

                    // 3  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–π
                    context.Partners.Remove(partner);
                    await context.SaveChangesAsync();

                    Debug.WriteLine($"üü¢ PartnerService: –ü–∞—Ä—Ç–Ω–µ—Ä {partner.Name} (ID: {partnerId}) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
                }
                else
                {
                    Debug.WriteLine($"üü° PartnerService: –ü–∞—Ä—Ç–Ω–µ—Ä {partnerId} –Ω–µ –Ω–∞–π–¥–µ–Ω");
                }
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ PartnerService: –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ {partnerId}: {ex.Message}");
                Debug.WriteLine($"üî¥ PartnerService: Inner: {ex.InnerException?.Message}");
                throw;
            }
        }
    }
}