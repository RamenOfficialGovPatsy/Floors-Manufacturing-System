// ViewModels/ProductsViewModel.cs
using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using Master_Floor_Project.Data;
using Master_Floor_Project.Models;
using Master_Floor_Project.Services;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using System.Diagnostics;
using System;

namespace Master_Floor_Project.ViewModels
{
    public partial class ProductsViewModel : ViewModelBase
    {
        private readonly IProductService _productService;

        [ObservableProperty]
        private ObservableCollection<Product> _products = new();

        [ObservableProperty]
        private bool _isLoading = true;

        public ProductsViewModel()
        {
            Debug.WriteLine("üü° ProductsViewModel: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑–≤–∞–Ω");

            _productService = new ProductService(new AppDbContext());
            _ = TestDatabaseConnection();
        }

        private async Task TestDatabaseConnection()
        {
            try
            {
                Debug.WriteLine("üü° ProductsViewModel: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...");
                using var context = new AppDbContext(); // –ü–†–ê–í–ò–õ–¨–ù–û!
                await context.TestConnectionAsync();
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ ProductsViewModel: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ë–î: {ex.Message}");
            }
        }

        [RelayCommand]
        public async Task LoadProductsAsync()
        {
            Debug.WriteLine("üü° ProductsViewModel: LoadProductsAsync –Ω–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ");
            IsLoading = true;
            try
            {
                Products.Clear();
                var productsList = await _productService.GetProductsAsync();
                Debug.WriteLine($"üü° ProductsViewModel: –ü–æ–ª—É—á–µ–Ω–æ {productsList.Count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞");

                foreach (var product in productsList)
                {
                    Products.Add(product);
                }
                Debug.WriteLine($"üü¢ ProductsViewModel: –í ObservableCollection –¥–æ–±–∞–≤–ª–µ–Ω–æ {Products.Count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤");
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ ProductsViewModel: –û—à–∏–±–∫–∞: {ex.Message}");
            }
            finally
            {
                IsLoading = false;
                Debug.WriteLine("üü° ProductsViewModel: LoadProductsAsync –∑–∞–≤–µ—Ä—à–µ–Ω");
            }
        }
    }
}