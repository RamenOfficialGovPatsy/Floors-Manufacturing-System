using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using Master_Floor_Project.Data;
using Master_Floor_Project.Models;
using Master_Floor_Project.Services;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using System.Diagnostics;
using System;

namespace Master_Floor_Project.ViewModels
{
    public partial class ProductsViewModel : ViewModelBase
    {
        // –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
        private readonly IProductService _productService;

        [ObservableProperty]
        private ObservableCollection<Product> _products = new(); // –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

        [ObservableProperty]
        private bool _isLoading = true; // –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö

        public ProductsViewModel()
        {
            Debug.WriteLine("üü° ProductsViewModel: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑–≤–∞–Ω");

            _productService = new ProductService();
            _ = TestDatabaseConnection(); // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        }

        // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        private async Task TestDatabaseConnection()
        {
            try
            {
                Debug.WriteLine("üü° ProductsViewModel: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...");
                using var context = new AppDbContext(); // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ë–î
                await context.TestConnectionAsync(); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ ProductsViewModel: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ë–î: {ex.Message}");
            }
        }

        // –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        [RelayCommand]
        public async Task LoadProductsAsync()
        {
            Debug.WriteLine("üü° ProductsViewModel: LoadProductsAsync –Ω–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ");
            IsLoading = true; // –í–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            try
            {
                Products.Clear(); // –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤

                // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –ë–î
                var productsList = await _productService.GetProductsAsync();
                Debug.WriteLine($"üü° ProductsViewModel: –ü–æ–ª—É—á–µ–Ω–æ {productsList.Count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞");

                foreach (var product in productsList)
                {
                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –Ω–∞–±–ª—é–¥–∞–µ–º—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
                    Products.Add(product);
                }
                Debug.WriteLine($"üü¢ ProductsViewModel: –í ObservableCollection –¥–æ–±–∞–≤–ª–µ–Ω–æ {Products.Count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤");
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ ProductsViewModel: –û—à–∏–±–∫–∞: {ex.Message}");
            }
            finally
            {
                IsLoading = false; // –í—ã–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                Debug.WriteLine("üü° ProductsViewModel: LoadProductsAsync –∑–∞–≤–µ—Ä—à–µ–Ω");
            }
        }
    }
}