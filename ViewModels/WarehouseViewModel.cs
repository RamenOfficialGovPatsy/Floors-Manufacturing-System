using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using Master_Floor_Project.Models;
using Master_Floor_Project.Services;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using System.Diagnostics;
using System;

namespace Master_Floor_Project.ViewModels
{
    public partial class WarehouseViewModel : ViewModelBase
    {
        private readonly IWarehouseService _warehouseService;

        [ObservableProperty]
        private ObservableCollection<WarehouseItem> _warehouseItems = new();

        [ObservableProperty]
        private bool _isLoading;

        public WarehouseViewModel()
        {
            try
            {
                Debug.WriteLine("üü° WarehouseViewModel: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...");
                _warehouseService = new WarehouseService(); // –£–ë–†–ê–õ –ø–∞—Ä–∞–º–µ—Ç—Ä
                Debug.WriteLine("üü¢ WarehouseViewModel: –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ WarehouseViewModel: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {ex.Message}");
                throw;
            }
        }

        [RelayCommand]
        public async Task LoadWarehouseDataAsync()
        {
            try
            {
                Debug.WriteLine("üü° WarehouseViewModel: –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
                IsLoading = true;
                WarehouseItems.Clear();

                var items = await _warehouseService.GetWarehouseItemsAsync();

                if (items != null && items.Count > 0)
                {
                    foreach (var item in items)
                    {
                        WarehouseItems.Add(item);
                    }
                    Debug.WriteLine($"üü¢ WarehouseViewModel: –ó–∞–≥—Ä—É–∂–µ–Ω–æ {WarehouseItems.Count} –∑–∞–ø–∏—Å–µ–π");
                }
                else
                {
                    Debug.WriteLine("üü° WarehouseViewModel: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è");
                }
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ WarehouseViewModel: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {ex.Message}");
            }
            finally
            {
                IsLoading = false;
                Debug.WriteLine("üü° WarehouseViewModel: –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
            }
        }
    }
}