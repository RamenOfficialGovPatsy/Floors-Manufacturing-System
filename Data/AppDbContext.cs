using Master_Floor_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using System;
using System.Diagnostics;
using System.Threading.Tasks;

namespace Master_Floor_Project.Data
{
    public class AppDbContext : DbContext
    {
        // DbSet –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        public DbSet<Partner> Partners { get; set; } // –¢–∞–±–ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏
        public DbSet<Product> Products { get; set; } // –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–¥—É–∫—Ü–∏–∏
        public DbSet<Manager> Managers { get; set; } // –¢–∞–±–ª–∏—Ü–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        public DbSet<Application> Applications { get; set; } // –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
        public DbSet<ApplicationItem> ApplicationItems { get; set; } // –¢–∞–±–ª–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π –≤ –∑–∞—è–≤–∫–∞—Ö
        public DbSet<WarehouseItem> Warehouse { get; set; } // –¢–∞–±–ª–∏—Ü–∞ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤
        public DbSet<SalesHistory> SalesHistory { get; set; } // –¢–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–∂ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–æ–∫

        // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        public async Task TestConnectionAsync()
        {
            try
            {
                Debug.WriteLine("üü° AppDbContext: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...");
                var canConnect = await Database.CanConnectAsync(); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                Debug.WriteLine(canConnect
                    ? "üü¢ AppDbContext: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ"
                    : "üî¥ AppDbContext: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î");
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"üî¥ AppDbContext: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {ex.Message}");
            }
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î PostgreSQL
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –µ—â–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
            if (!optionsBuilder.IsConfigured)
            {
                var connectionString = "Host=localhost;Port=5432;Username=master_floor_user;Password=RDjd6452;Database=master_floor_db";

                optionsBuilder
                    .UseNpgsql(connectionString) // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ PostgreSQL
                    .UseSnakeCaseNamingConvention() // –°—Ç–∏–ª—å –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –∏ –∫–æ–ª–æ–Ω–æ–∫ –≤ snake_case
                    .LogTo(message => Debug.WriteLine(message), LogLevel.Information) // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–æ–≤
                    .EnableSensitiveDataLogging(); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            }
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–ª–µ–π –ë–î –∏ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è ApplicationItem
            modelBuilder.Entity<ApplicationItem>(entity =>
            {
                entity.HasKey(ai => ai.ApplicationItemId); // –ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
                entity.HasOne(ai => ai.Application) // –°–≤—è–∑—å —Å –∑–∞—è–≤–∫–æ–π
                      .WithMany(a => a.ApplicationItems) // –û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ - –º–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–π
                      .HasForeignKey(ai => ai.ApplicationId) // –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –Ω–∞ –∑–∞—è–≤–∫—É
                      .OnDelete(DeleteBehavior.Cascade); // –ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏
                entity.HasOne(ai => ai.Product) // –°–≤—è–∑—å —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º
                      .WithMany()
                      .HasForeignKey(ai => ai.ProductId) // –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç
                      .OnDelete(DeleteBehavior.Restrict); // –ó–∞–ø—Ä–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
            });

            // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è WarehouseItem
            modelBuilder.Entity<WarehouseItem>(entity =>
            {
                entity.HasKey(w => w.WarehouseId); // –ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
                entity.HasOne(w => w.Product) // –°–≤—è–∑—å —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º
                      .WithMany()
                      .HasForeignKey(w => w.ProductId) // –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç
                      .OnDelete(DeleteBehavior.Restrict); // –ó–∞–ø—Ä–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
            });
        }
    }
}